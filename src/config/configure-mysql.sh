#!/bin/bash

# configure-mysql.sh - Configuration script for MySQL/MariaDB
# This script configures MySQL/MariaDB for optimal performance with Nextcloud

# Source core functions and configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../core/common-functions.sh"
source "$SCRIPT_DIR/../core/logging.sh"
source "$SCRIPT_DIR/../core/config-manager.sh"

# Component details
COMPONENT="mysql"
MYSQL_CONF_DIR="/etc/mysql/mariadb.conf.d"
MYSQL_CONF_FILE="${MYSQL_CONF_DIR}/99-nextcloud.cnf"
SERVICE_NAME="mariadb"

# Main function
main() {
    print_header "Configuring MySQL/MariaDB for Nextcloud"
    
    # Load environment
    load_config
    
    # Check root
    require_root
    
    # Check if MySQL/MariaDB is installed
    if ! command -v mysql >/dev/null 2>&1; then
        print_error "MySQL/MariaDB is not installed. Please run the installation script first."
        exit 1
    fi
    
    # Configure MySQL/MariaDB
    configure_mysql
    
    # Optimize MySQL/MariaDB
    optimize_mysql
    
    # Secure MySQL/MariaDB
    secure_mysql
    
    # Restart MySQL/MariaDB
    if ! systemctl restart "$SERVICE_NAME"; then
        print_error "Failed to restart $SERVICE_NAME service"
        exit 1
    fi
    
    print_success "MySQL/MariaDB configuration completed"
}

# Configure MySQL/MariaDB
configure_mysql() {
    print_status "Configuring MySQL/MariaDB..."
    
    # Create MySQL configuration directory if it doesn't exist
    mkdir -p "$MYSQL_CONF_DIR"
    
    # Generate optimized MySQL configuration
    cat > "$MYSQL_CONF_FILE" << 'EOF'
# MySQL/MariaDB configuration for Nextcloud
# Generated by Nextcloud Setup Script

[mysqld]
# Basic settings
port = 3306
socket = /var/run/mysqld/mysqld.sock
pid-file = /var/run/mysqld/mysqld.pid
basedir = /usr
datadir = /var/lib/mysql
tmpdir = /tmp

# Connection settings
max_connections = 1000
max_connect_errors = 1000000
connect_timeout = 60
wait_timeout = 600
interactive_timeout = 600
net_read_timeout = 60
net_write_timeout = 60
max_allowed_packet = 1G

# InnoDB settings
default_storage_engine = InnoDB
innodb_buffer_pool_size = 2G
innodb_buffer_pool_instances = 4
innodb_flush_log_at_trx_commit = 2
innodb_flush_method = O_DIRECT
innodb_log_file_size = 512M
innodb_log_buffer_size = 64M
innodb_io_capacity = 2000
innodb_io_capacity_max = 4000
innodb_read_io_threads = 8
innodb_write_io_threads = 8
innodb_thread_concurrency = 0
innodb_file_per_table = 1
innodb_strict_mode = 1
innodb_large_prefix = 1
innodb_file_format = Barracuda
innodb_buffer_pool_load_at_startup = 1
innodb_buffer_pool_dump_at_shutdown = 1

# Query cache is disabled as it's deprecated in MySQL 5.7.20+
query_cache_type = 0
query_cache_size = 0

# Temp tables
tmp_table_size = 64M
max_heap_table_size = 64M

# Table cache
table_open_cache = 4000
table_definition_cache = 4000
table_open_cache_instances = 16

# Thread cache
thread_cache_size = 64
thread_stack = 512K

# Sort and join buffers
sort_buffer_size = 8M
join_buffer_size = 8M
read_buffer_size = 8M
read_rnd_buffer_size = 4M

# Character set
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
init_connect = 'SET NAMES utf8mb4'
skip-character-set-client-handshake

[client]
default-character-set = utf8mb4

[mysql]
default-character-set = utf8mb4

[mysqldump]
max_allowed_packet = 1G
quick
quote-names

!includedir /etc/mysql/conf.d/
!includedir /etc/mysql/mariadb.conf.d/
EOF
    
    # Set proper permissions
    chmod 644 "$MYSQL_CONF_FILE"
    chown root:root "$MYSQL_CONF_FILE"
    
    # Create log directory if it doesn't exist
    mkdir -p /var/log/mysql
    chown -R mysql:mysql /var/log/mysql
    chmod 750 /var/log/mysql
    
    print_status "MySQL/MariaDB configuration applied successfully"
}

# Optimize MySQL/MariaDB
optimize_mysql() {
    print_status "Optimizing MySQL/MariaDB..."
    
    # Create MySQL tuning script
    local tuning_script="/tmp/mysql_tuning.sql"
    
    cat > "$tuning_script" << 'EOF'
-- MySQL/MariaDB Tuning Script for Nextcloud
SET GLOBAL innodb_fast_shutdown = 1;
SET GLOBAL innodb_buffer_pool_dump_now = ON;
SET GLOBAL innodb_buffer_pool_load_now = ON;
SET GLOBAL innodb_io_capacity = 2000;
SET GLOBAL innodb_io_capacity_max = 4000;
SET GLOBAL innodb_read_io_threads = 8;
SET GLOBAL innodb_write_io_threads = 8;
SET GLOBAL innodb_purge_threads = 4;
SET GLOBAL innodb_page_cleaners = 4;
SET GLOBAL innodb_lru_scan_depth = 2000;
SET GLOBAL innodb_buffer_pool_instances = 4;
SET GLOBAL innodb_adaptive_hash_index_parts = 8;
FLUSH PRIVILEGES;
EOF
    
    # Apply tuning
    mysql -u root -p"${MYSQL_ROOT_PASSWORD}" < "$tuning_script"
    rm -f "$tuning_script"
    
    print_status "MySQL/MariaDB optimization completed"
}

# Secure MySQL/MariaDB
secure_mysql() {
    print_status "Securing MySQL/MariaDB..."
    
    # Create secure installation script
    local secure_script="/tmp/mysql_secure.sql"
    
    cat > "$secure_script" << EOF
-- Remove anonymous users
DELETE FROM mysql.user WHERE User='';

-- Remove remote root login
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');

-- Remove test database
DROP DATABASE IF EXISTS test;
DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';

-- Reload privilege tables
FLUSH PRIVILEGES;
EOF
    
    # Apply security settings
    mysql -u root -p"${MYSQL_ROOT_PASSWORD}" < "$secure_script"
    rm -f "$secure_script"
    
    # Enable and start service if not already running
    if ! systemctl is-active --quiet "$SERVICE_NAME"; then
        systemctl enable --now "$SERVICE_NAME"
    fi
    
    print_status "MySQL/MariaDB security configuration completed"
}

# Run main function
main "@"

# specily logic for esuraing mysql is configure an ready to go.