[PHP]
; Maximum execution time of each script, in seconds
max_execution_time = 360

; Maximum amount of time each script may spend parsing request data
max_input_time = 360

; Maximum amount of memory a script may consume
memory_limit = 512M

; Maximum allowed size for uploaded files
upload_max_filesize = 10G

; Maximum size of POST data that PHP will accept
post_max_size = 10G

; Maximum number of files that can be uploaded via a single request
max_file_uploads = 200

; Default timeout for socket based streams (seconds)
default_socket_timeout = 3600

[Date]
; Defines the default timezone used by the date functions
date.timezone = Africa/Nairobi

[opcache]
; Determines if Zend OPCache is enabled
opcache.enable = 1

; The OPcache shared memory storage size in megabytes
opcache.memory_consumption = 128

; The amount of memory for interned strings in Mbytes
opcache.interned_strings_buffer = 8

; The maximum number of keys (scripts) in the OPcache hash table
opcache.max_accelerated_files = 10000

; How often to check script timestamps for updates, in seconds
opcache.revalidate_freq = 1

; If enabled, OPcache appends the current working directory to the script key
opcache.revalidate_path = 1

; If enabled, a fast shutdown sequence is used
opcache.fast_shutdown = 1

; Enables the OPcache for the CLI version of PHP
opcache.enable_cli = 1

; The maximum percentage of "wasted" memory until a restart is scheduled
opcache.max_wasted_percentage = 5

; Prevents caching files larger than this size (in bytes)
opcache.max_file_size = 0

; Protect the shared memory from unexpected writing during script execution
opcache.protect_memory = 1

; Allow file existence override (file_exists, etc.) performance feature
opcache.enable_file_override = 0

; A bitfield, where each bit enables or disables the appropriate OPcache pass
opcache.optimization_level = 0x7FFFBFFF

; The location of the OPcache blacklist file
opcache.blacklist_filename = /etc/php/8.4/mods-available/opcache-blacklist

[Session]
; Handler used to store/retrieve data
session.save_handler = redis

; Connection string for Redis session handler
session.save_path = "tcp://127.0.0.1:6379"

; Define the probability that the 'garbage collection' process is started
session.gc_probability = 1

; After this number of seconds, stored data will be seen as 'garbage' and cleaned up
session.gc_maxlifetime = 1440

; Session name
session.name = PHPSESSID

; Whether to use cookies
session.use_cookies = 1

; Lifetime in seconds of cookie or, if 0, until browser is restarted
session.cookie_lifetime = 0

; Path on the domain where the cookie will work
session.cookie_path = /
